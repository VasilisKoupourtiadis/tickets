@page "/"
@using static tickets.Services.Teams.Queries.GetAllTeams
@inject IServiceManager serviceManager
@inject IMediator mediator
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

@if(teams is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="px-5 mb-5">
        <h1 class="mb-3">Overview</h1>

        <section class="d-flex flex-row gap-3">
            <div class="dropdown">
                <button class="btn home-table-nav-button btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Teams
                </button>
                <ul class="dropdown-menu dropdown-menu-pink">
                    @foreach(var team in teams.OrderBy(x => x.Name))
                    {
                        <li class="dropdown-item pointer">@team.Name</li>
                    }
                </ul>
            </div>
            <div class="dropdown">
                <button class="btn home-table-nav-button btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Status
                </button>
                <ul class="dropdown-menu dropdown-menu-pink">
                    <li class="dropdown-item pointer">Active</li>
                    <li class="dropdown-item pointer">Pending</li>
                    <li class="dropdown-item pointer">Closed</li>
                </ul>
            </div>
        </section>
    </section>
}

@code {
    private ICollection<TeamsResult>? teams;

    protected override async Task OnInitializedAsync()
    {
        teams = await mediator.Send(new GetAllTeamsQuery());
    }
}
