@page "/employees/{id:guid}"
@using static tickets.Services.Employees.Queries.GetEmployee
@inject IServiceManager serviceManager
@inject IMediator mediator
@rendermode InteractiveServer

<PageTitle>Details</PageTitle>

@if (employee is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <section class="px-5">
        <h1 class="mb-3">Employee Details</h1>

        <img src="@($"https://fakeimg.pl/200x200/94bbe9/eeaeca?text={GetInitals(employee.FullName)}")" class="rounded-circle mb-3" />

        <span class="d-block">Name: @employee.FullName</span>
        <span class="d-block">Title: @employee.Title</span>
        <span class="d-block">Belongs to: @employee.TeamName</span>

        <br />

        <h4>Tickets</h4>
        @foreach (var ticket in employee.Tickets)
        {
            <span class="d-block">Ticket Id: @ticket.Id</span>
            <span class="d-block">Title: @ticket.Title</span>
            <span class="d-block">Description: @ticket.Description</span>
            <span class="d-block">Status: @ticket.Status</span>
        }
    </section>    
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private EmployeeResult? employee;

    protected override async Task OnInitializedAsync()
    {
        employee = await mediator.Send(new GetEmployeeQuery()
        {
            Id = Id
        });
    }

    private string GetInitals(string name)
    {
        var splitName = name.Split(" ");

        var firstName = splitName[0].Remove(1);
        var lastName = splitName[1].Remove(1);

        return $"{firstName} . {lastName}";
    }
}
